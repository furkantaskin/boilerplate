@use 'sass:list';
@use 'sass:map';

@mixin max-responsive($max-width, $custom: false) {
  $max: map.get($breakpoints, $max-width);
  $max-value: list.nth($max, -1);

  @if $max == null {
    @if $custom == false {
      @warn "#{$max-width} is not defined in breakpoints. Check your breakpoint or use it as @include max-responsive(#{$max-width}, $custom: true)";
    } @else {
      @media screen and (max-width: #{$max-width}) {
        @content;
      }
    }
  } @else {
    @media screen and (max-width: #{$max-value}) {
      @content;
    }
  }
}

@mixin min-responsive($min-width, $custom: false){
  $min: map.get($breakpoints, $min-width);
  $min-value: list.nth($min, 1);

  @if $min == null {
    @if $custom == false {
      @warn "#{$min-width} is not defined in breakpoints. Check your breakpoint or use it as @include min-responsive(#{$min-width}, $custom: true)";
    } @else {
      @media screen and (min-width: #{$min-width}) {
        @content;
      }
    }
  } @else {
    @media screen and (min-width: #{$min-value}) {
      @content;
    }
  }
}

@mixin no-hover() {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}


@mixin call-template($template) {
  @if $template == 'noscroll' {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  } @else if $template == 'noarrow' {
    -webkit-appearance: none;
    -moz-appearance: none;
  }
}

@mixin edit-placeholder(){
  $placeholderList: ('::-webkit-input-placeholder', '::-moz-placeholder', ':-ms-input-placeholder', ':-moz-placeholder');
  @each $placeholder in $placeholderList{
    &#{$placeholder}{
      @content;
    }
  }
}