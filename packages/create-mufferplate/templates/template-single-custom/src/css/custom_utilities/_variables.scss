@use 'sass:map';

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px,
);

$grid-gutter: 12px;
$number-of-col: 12;
$is-mobile-first: false;
$container-no-padding: false;

$has-rtl: true;
$spacing-utilities: ();
$spacer: 4px;
$spacer-limit: 25;

$utilities: (
  'display': (
    property: display,
    isActive: true,
    values: (
      block: block,
      flex: flex,
      inline-block: inline-block,
      inline-flex: inline-flex,
      hidden: none,
    ),
  ),
  'position': (
    property: position,
    isActive: true,
    values: (
      relative: relative,
      absolute: absolute,
      fixed: fixed,
    ),
  ),
  'align': (
    property: align-items,
    isActive: true,
    values: (
      items-start: flex-start,
      items-end: flex-end,
      items-center: center,
      items-baseline: baseline,
      items-stretch: stretch,
    ),
  ),
  'justify': (
    property: justify-content,
    isActive: true,
    values: (
      justify-normal: normal,
      justify-start: start,
      justify-end: end,
      justify-center: center,
      justify-between: space-between,
    ),
  ),
  'flex-direction': (
    property: flex-direction,
    isActive: true,
    values: (
      flex-row: row,
      flex-row-reverse: row-reverse,
      flex-col: column,
      flex-col-reverse: column-reverse,
    ),
  ),
  'flex-wrap': (
    property: flex-wrap,
    isActive: true,
    values: (
      flex-wrap: wrap,
      flex-wrap-reverse: wrap-reverse,
      flex-nowrap: nowrap,
    ),
  ),
  'flex-status': (
    property: flex,
    isActive: true,
    values: (
      flex-1: 1 1 0%,
      flex-auto: 1 1 auto,
      flex-initial: 0 1 auto,
      flex-none: none,
    ),
  ),
  'text-align': (
    property: text-align,
    isActive: true,
    values: (
      text-left: left,
      text-center: center,
      text-right: right,
      text-justify: justify,
      text-start: start,
      text-end: end,
    ),
  ),
  'font-weight': (
    property: font-weight,
    isActive: true,
    values: (
      font-thin: 100,
      font-extralight: 200,
      font-light: 300,
      font-regular: 400,
      font-medium: 500,
      font-semibold: 600,
      font-bold: 700,
      font-extrabold: 800,
      font-black: 900,
    ),
  ),
  'object-fit': (
    property: object-fit,
    isActive: true,
    values: (
      object-contain: contain,
      object-cover: cover,
      object-fill: fill,
      object-none: none,
    ),
  ),
  'object-position': (
    property: object-position,
    isActive: true,
    values: (
      object-center: center,
      object-top: top,
      object-bottom: bottom,
      object-left: left,
      object-right: right,
      object-left-top: left top,
      object-right-top: right top,
      object-right-bottom: right bottom,
      object-left-bottom: left bottom,
    ),
  ),
  'user-select': (
    property: user-select,
    isActive: true,
    values: (
      select-none: none,
      select-text: text,
      select-all: all,
      select-auto: auto,
    ),
  ),
  'pointer-events': (
    property: pointer-events,
    isActive: true,
    values: (
      pointer-events-none: none,
      pointer-events-auto: auto,
    ),
  ),
);


@if ($has-rtl) {
  $spacing-utilities: map.merge(
    $spacing-utilities, (
      't': "block-start",
      'b': "block-end",
      'l': "inline-start",
      'r': "inline-end"
    )
  );
} @else {

  $spacing-utilities: map.merge(
    $spacing-utilities,
    (
      't': 'top',
      'b': 'bottom',
      'l': 'left',
      'r': 'right',
    )
  );
}

$position-utilities: ('top', 'left', 'bottom', 'right');

