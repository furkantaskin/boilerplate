@mixin generate_container_up($get_key) {
  @media screen and (min-width: map.get($grid-breakpoints, $get_key)) {
    @content;
  }
}

@mixin generate_utilities($has-key: false) {
  @each $property, $map in $utilities {
    @each $util-key, $util-val in map.get($map, values) {
      @if (map.get($map, isActive) == true) {
        .#{if($has-key, '#{$has-key}\\:', '')}#{$util-key} {
          #{map.get($map, property)}: $util-val;
        }
      }
    }
  }
  @for $i from 1 through $number-of-col {
    .#{if($has-key, '#{$has-key}\\:', '')}z-#{$i} {
      z-index: $i;
    }
    .#{if($has-key, '#{$has-key}\\:', '')}order-#{$i} {
      order: $i;
    }
  }

  @for $i from 0 through 4 {
    .#{if($has-key, '#{$has-key}\\:', '')}w-#{$i * 25} {
      width: generate-width($i, 4);
    }
    .#{if($has-key, '#{$has-key}\\:', '')}h-#{$i * 25} {
      height: generate-width($i, 4);
    }
  }

  .#{if($has-key, '#{$has-key}\\:', '')}h-auto {
    height: auto;
  }
  .#{if($has-key, '#{$has-key}\\:', '')}w-auto {
    width: auto;
  }
  .#{if($has-key, '#{$has-key}\\:', '')}h-screen {
    height: 100vh;
  }
  .#{if($has-key, '#{$has-key}\\:', '')}w-screen {
    width: 100vw;
  }
}

@mixin generate_cols($has-key: false) {
  @for $i from 1 through $number-of-col {
    .col-#{if($has-key, '#{$has-key}-', '')}#{$i} {
      width: generate-width($i, $number-of-col);
    }
    @if $i != $number-of-col {
      .offset-#{if($has-key, '#{$has-key}-', '')}#{$i} {
        margin-left: generate-width($i, $number-of-col);
      }
    }
  }
}

@mixin generate_spacing($has-key: false) {
  @for $i from 0 through $spacer-limit {
    @each $key, $direction in $spacing-utilities {
      .#{if($has-key, '#{$has-key}\\:m', 'm')}#{$key}-#{$i} {
        margin-#{$direction}: #{$i * $spacer};
      }
      .#{if($has-key, '#{$has-key}\\:p', 'p')}#{$key}-#{$i} {
        padding-#{$direction}: #{$i * $spacer};
      }
      .#{if($has-key, '#{$has-key}\\:', '')}#{$direction}-#{$i} {
        #{$direction}: #{$i * 4%};
      }
    }

    @each $axis in ('x', 'y') {
      .#{if($has-key, '#{$has-key}\\:m', 'm')}#{$axis}-#{$i} {
        margin: {
          #{if($axis == 'x', 'left', 'top')}: #{$i * $spacer};
          #{if($axis == 'x', 'right', 'bottom')}: #{$i * $spacer};
        }
      }
    }
    .#{if($has-key, '#{$has-key}\\:', '')}gap-x-#{$i} {
      column-gap: #{$i * $spacer};
    }
    .#{if($has-key, '#{$has-key}\\:', '')}gap-y-#{$i} {
      row-gap: #{$i * $spacer};
    }
    .#{if($has-key, '#{$has-key}\\:', '')}gap-#{$i} {
      gap: #{$i * $spacer};
    }
  }
}

@mixin generate_font_size($has-key: false) {
  @for $i from 0 through $spacer-limit {
    .#{if($has-key, '#{$has-key}\\:', '')}text-#{$i} {
      font-size: #{$i * $spacer};
    }
  }
}

@mixin generate_opacity($has-key: false) {
  @for $i from 0 through 100 {
    @if $i % 10 == 0 {
      .#{if($has-key, '#{$has-key}\\:', '')}opacity-#{$i} {
        opacity: math.div($i, 100);
      }
    }
  }
}
